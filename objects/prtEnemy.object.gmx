<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>dead = false;
canInitDeath = true;
beenOutsideView = false;
canHit = true;
xspeed = 0;
yspeed = 0;

respawn = true; //Should we respawn after leaving the screen and entering it again?

//Default damage
damageBuster = 1;
damageBusterCharged = 2;

damageMetalBlade = 1;

damagePharaohShot = 1;
damagePharaohShotCharged = 2;

damageStarCrash = 1;

damageSilverTomahawk = 1;
damageWindStorm = 1;

damageCentaurFlash = 10;

damageFlashBomb =11;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if dead == false
    visible = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//"Die" (doesn't actually destroy the enemy though)
if healthpoints &lt;= 0
{   
    if canInitDeath == true
    {
        beenOutsideView = false;
        visible = false;
        dead = true;    //Enemies don't actually destroy themselves, they become invisible and all collision is neglected
        x = xstart;     //This is done to allow them to still execute code (for respawning)
        y = ystart;
        canInitDeath = false;
        xspeed = 0;
        yspeed = 0;
    }   
}

//Respawning
if respawn == true
{
    if beenOutsideView == true
    {
        if insideView()
        {
            visible = true;
            dead = false;
            healthpoints = healthpointsStart;
            canInitDeath = true;
            beenOutsideView = false;
        }
    }
}
else
{
    if dead == true
        instance_destroy(); //If we can't respawn, there's no point to still be able to execute any code. Destroying the instance saves memory and processing power
}

if !insideView()
{
    beenOutsideView = true;
    
    x = xstart;
    y = ystart;
    healthpoints = 0;
    dead = true;
    visible = false;
    xspeed = 0;
    yspeed = 0;

}
    
    
if dead == true
{
    xspeed = 0;
    yspeed = 0;
    exit;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objFlashExplosion">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if  damageFlashBomb != 0
&amp;&amp; !(reflectProjectilesLeft == true &amp;&amp; sprite_get_xcenter_object(other.id) &lt; sprite_get_xcenter())
&amp;&amp; !(reflectProjectilesRight == true &amp;&amp; sprite_get_xcenter_object(other.id) &gt; sprite_get_xcenter())
{
    if dead == false
    {
        if canHit == true
        {
            healthpoints -= damageFlashBomb;
            visible = false;
        }
        alarm[11] = 2;
        
        if healthpoints &gt;= 0
            with other instance_destroy();
            
        sound_stop(sfxFlashBomb);
        playSFX(sfxEnemyHit);
            
        if healthpoints &lt;= 0 &amp;&amp; object_get_parent(object_index) != prtBoss
        {
            instance_create(sprite_get_xcenter(), sprite_get_ycenter(), objItemExplosion);
        }
    }
}
else
{
    event_user(0); //Reflect the projectiles
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objWindStorm">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if reflectProjectiles == false &amp;&amp; damageWindStorm != 0
&amp;&amp; !(reflectProjectilesLeft == true &amp;&amp; sprite_get_xcenter_object(other.id) &lt; sprite_get_xcenter())
&amp;&amp; !(reflectProjectilesRight == true &amp;&amp; sprite_get_xcenter_object(other.id) &gt; sprite_get_xcenter())
{
    if dead == false
    {
        if canHit == true
        {
            healthpoints -= damageWindStorm;
            visible = false;
        }
        alarm[11] = 2;
        
        sound_stop(sfxBuster);
        playSFX(sfxEnemyHit);
        
        if healthpoints &lt;= 0 &amp;&amp; object_get_parent(object_index) != prtBoss
        {
            var windID;
            windID = instance_create(sprite_get_xcenter(), sprite_get_ycenter(), objEnemyWindStorm);
                windID.enemySpr = sprite_index;
                windID.enemyImg = image_index;
                windID.enemyXScale = image_xscale;
                windID.enemyYScale = image_yscale;
                windID.enemyAngle = image_angle;
                windID.image_index = other.image_index;
                windID.image_speed = other.image_speed;
                windID.image_xscale = other.image_xscale;
                
            dead = false;
        }
        
        with other instance_destroy();
    }
}
else
{
    event_user(0); //Reflect the projectiles
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objSilverTomahawk">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if reflectProjectiles == false &amp;&amp; damageSilverTomahawk != 0
&amp;&amp; !(reflectProjectilesLeft == true &amp;&amp; sprite_get_xcenter_object(other.id) &lt; sprite_get_xcenter())
&amp;&amp; !(reflectProjectilesRight == true &amp;&amp; sprite_get_xcenter_object(other.id) &gt; sprite_get_xcenter())
{
    if dead == false
    {
        if canHit == true
        {
            healthpoints -= damageSilverTomahawk;
            visible = false;
        }
        alarm[11] = 2;
        
        if healthpoints &gt;= 0
            with other instance_destroy();
            
        sound_stop(sfxBuster);
        playSFX(sfxEnemyHit);
            
        if healthpoints &lt;= 0 &amp;&amp; object_get_parent(object_index) != prtBoss
        {
            instance_create(sprite_get_xcenter(), sprite_get_ycenter(), objItemExplosion);
        }
    }
}
else
{
    event_user(0); //Reflect the projectiles
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objStarCrash">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if reflectProjectiles == false &amp;&amp; damageStarCrash != 0
&amp;&amp; !(reflectProjectilesLeft == true &amp;&amp; sprite_get_xcenter_object(other.id) &lt; sprite_get_xcenter())
&amp;&amp; !(reflectProjectilesRight == true &amp;&amp; sprite_get_xcenter_object(other.id) &gt; sprite_get_xcenter())
{
    if dead == false
    {
        if canHit == true
        {
            healthpoints -= damageStarCrash;
            visible = false;
        }
        alarm[11] = 2;
        with other instance_destroy();
        
        if other.xspeed == 0 //When it is not yet fired
        {
            global.ammo[global.currentWeapon] -= global.weaponAmmoContact[global.weaponSlot[global.currentWeapon]];
            if global.ammo[global.currentWeapon] &lt;= 0
                global.ammo[global.currentWeapon] = 0;
        }
        
        playSFX(sfxEnemyHit);
        
        if healthpoints &lt;= 0 &amp;&amp; object_get_parent(object_index) != prtBoss
        {
            instance_create(sprite_get_xcenter(), sprite_get_ycenter(), objItemExplosion);
        }
    }
}
else
{
    event_user(0); //Reflect the projectiles
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objPharaohShotCharged">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if reflectProjectiles == false &amp;&amp; damagePharaohShotCharged != 0
&amp;&amp; !(reflectProjectilesLeft == true &amp;&amp; sprite_get_xcenter_object(other.id) &lt; sprite_get_xcenter())
&amp;&amp; !(reflectProjectilesRight == true &amp;&amp; sprite_get_xcenter_object(other.id) &gt; sprite_get_xcenter())
{
    if dead == false
    {
        if canHit == true
        {
            healthpoints -= damagePharaohShotCharged;
            visible = false;
        }
        alarm[11] = 2;
        
        if healthpoints &gt;= 0
            with other instance_destroy();
            
        sound_stop(sfxPharaohShotCharged);
        playSFX(sfxEnemyHit);
            
        if healthpoints &lt;= 0 &amp;&amp; object_get_parent(object_index) != prtBoss
        {
            instance_create(sprite_get_xcenter(), sprite_get_ycenter(), objItemExplosion);
        }
    }
}
else
{
    event_user(0); //Reflect the projectiles
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objPharaohShot">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if reflectProjectiles == false &amp;&amp; damagePharaohShot != 0
&amp;&amp; !(reflectProjectilesLeft == true &amp;&amp; sprite_get_xcenter_object(other.id) &lt; sprite_get_xcenter())
&amp;&amp; !(reflectProjectilesRight == true &amp;&amp; sprite_get_xcenter_object(other.id) &gt; sprite_get_xcenter())
{
    if dead == false
    {
        if canHit == true
        {
            healthpoints -= damagePharaohShot;
            visible = false;
        }
        alarm[11] = 2;
        with other instance_destroy();
        
        sound_stop(sfxPharaohShot);
        playSFX(sfxEnemyHit);
        
        if healthpoints &lt;= 0 &amp;&amp; object_get_parent(object_index) != prtBoss
        {
            instance_create(sprite_get_xcenter(), sprite_get_ycenter(), objItemExplosion);
        }
    }
}
else
{
    event_user(0); //Reflect the projectiles
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objPharaohShotCharging">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if reflectProjectiles == false &amp;&amp; damagePharaohShot != 0
&amp;&amp; !(reflectProjectilesLeft == true &amp;&amp; sprite_get_xcenter_object(other.id) &lt; sprite_get_xcenter())
&amp;&amp; !(reflectProjectilesRight == true &amp;&amp; sprite_get_xcenter_object(other.id) &gt; sprite_get_xcenter())
{
    if dead == false
    {
        if other.sprite_index == sprPharaohShotCharging
        {
            if canHit == true
            {
                healthpoints -= damagePharaohShot;
                visible = false;
            }
            alarm[11] = 2;
            
            if healthpoints &gt;= 0
                with other instance_destroy();
                
            playSFX(sfxEnemyHit);
                
            if healthpoints &lt;= 0 &amp;&amp; object_get_parent(object_index) != prtBoss
            {
                instance_create(sprite_get_xcenter(), sprite_get_ycenter(), objItemExplosion);
            }
            
            //No ammo was taken in MM4, so I removed it from here as well
            //global.ammo[global.currentWeapon] -= global.weaponAmmo[global.weaponSlot[global.currentWeapon]];
        }
        else
        {
            if canHit == true
            {
                healthpoints -= damagePharaohShotCharged;
                visible = false;
            }
            alarm[11] = 2;
            
            if healthpoints &gt;= 0
                with other instance_destroy();
                
            playSFX(sfxEnemyHit);
                
            if healthpoints &lt;= 0 &amp;&amp; object_get_parent(object_index) != prtBoss
            {
                instance_create(sprite_get_xcenter(), sprite_get_ycenter(), objExplosion);
            }
            
            //global.ammo[global.currentWeapon] -= 2;
        }
    }
}
else
{
    event_user(0); //Reflect the projectiles
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objMetalBlade">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if reflectProjectiles == false &amp;&amp; damageMetalBlade != 0
&amp;&amp; !(reflectProjectilesLeft == true &amp;&amp; sprite_get_xcenter_object(other.id) &lt; sprite_get_xcenter())
&amp;&amp; !(reflectProjectilesRight == true &amp;&amp; sprite_get_xcenter_object(other.id) &gt; sprite_get_xcenter())
{
    if dead == false
    {
        if canHit == true
        {
            healthpoints -= damageMetalBlade;
            visible = false;
        }
        alarm[11] = 2;
        
        if healthpoints &gt; 0
            with other instance_destroy();
            
        sound_stop(sfxMetalBlade);
        playSFX(sfxEnemyHit);
            
        if healthpoints &lt;= 0 &amp;&amp; object_get_parent(object_index) != prtBoss
        {
            instance_create(sprite_get_xcenter(), sprite_get_ycenter(), objItemExplosion);
        }
    }
}
else
{
    event_user(0); //Reflect the projectiles
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objBusterShotCharged">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if reflectProjectiles == false &amp;&amp; damageBusterCharged != 0
&amp;&amp; !(reflectProjectilesLeft == true &amp;&amp; sprite_get_xcenter_object(other.id) &lt; sprite_get_xcenter())
&amp;&amp; !(reflectProjectilesRight == true &amp;&amp; sprite_get_xcenter_object(other.id) &gt; sprite_get_xcenter())
{
    if dead == false
    {
        if canHit == true
        {
            healthpoints -= damageBusterCharged;
            visible = false;
        }
        alarm[11] = 2;
        
        if healthpoints &gt; 0
            with other instance_destroy();
            
        sound_stop(sfxBusterCharged);
        playSFX(sfxEnemyHit);
            
        if healthpoints &lt;= 0 &amp;&amp; object_get_parent(object_index) != prtBoss
        {
            instance_create(sprite_get_xcenter(), sprite_get_ycenter(), objItemExplosion);
        }
    }
}
else
{
    event_user(0); //Reflect the projectiles
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objBusterShotHalfCharged">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if reflectProjectiles == false &amp;&amp; damageBuster != 0
&amp;&amp; !(reflectProjectilesLeft == true &amp;&amp; sprite_get_xcenter_object(other.id) &lt; sprite_get_xcenter())
&amp;&amp; !(reflectProjectilesRight == true &amp;&amp; sprite_get_xcenter_object(other.id) &gt; sprite_get_xcenter())
{
    if dead == false
    {
        if canHit == true
        {
            healthpoints -= damageBuster;
            visible = false;
        }
        alarm[11] = 2;
        with other instance_destroy();
        
        sound_stop(sfxBusterHalfCharged);
        playSFX(sfxEnemyHit);
        
        if healthpoints &lt;= 0 &amp;&amp; object_get_parent(object_index) != prtBoss
        {
            instance_create(sprite_get_xcenter(), sprite_get_ycenter(), objItemExplosion);
        }
    }
}
else
{
    event_user(0); //Reflect the projectiles
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objBusterShot">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if reflectProjectiles == false &amp;&amp; damageBuster != 0
&amp;&amp; !(reflectProjectilesLeft == true &amp;&amp; sprite_get_xcenter_object(other.id) &lt; sprite_get_xcenter())
&amp;&amp; !(reflectProjectilesRight == true &amp;&amp; sprite_get_xcenter_object(other.id) &gt; sprite_get_xcenter())
{
    if dead == false
    {
        if canHit == true
        {
            healthpoints -= damageBuster;
            visible = false;
        }
        
        alarm[11] = 2;
        with other instance_destroy();
        
        sound_stop(sfxBuster);
        playSFX(sfxEnemyHit);
        
        if healthpoints &lt;= 0 &amp;&amp; object_get_parent(object_index) != prtBoss
        {
            instance_create(sprite_get_xcenter(), sprite_get_ycenter(), objItemExplosion);
        }
    }
}
else if !dead
{
    event_user(0); //Reflect the projectiles
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objMegaman">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if dead == false
{
    if other.canHit == true
    {  
        with other playerGetHit(other.contactDamage);
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if !dead &amp;&amp; other.object_index != objPharaohShotCharging
{
    with other
    {
        var ID;
        ID = instance_create(x, y, objReflectedProjectile);
            ID.sprite_index = sprite_index;
            ID.image_index = image_index;
            ID.image_speed = image_speed;
            ID.image_xscale = image_xscale;
            ID.dir = sign(xspeed);
            
        instance_destroy();
    }
    
    playSFX(sfxReflect);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>drawSelf();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
