<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1000</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>blackAlpha = 0;
blackAlphaIncrease = 0.2;
blackAlphaTimer = 0;
blackAlphaTimerMax = 2;

phase = 0;  //0: increasing the black rectangle's alpha
option = global.currentWeapon;
oldWeapon = global.weapon;
resetWeapon = false; //Should we, after exiting the menu, reset our weapon to the weapon that was used before the pause menu was opened? 

with objMegaman event_user(0);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>switch phase
{
    case 0: //Fading in
        blackAlphaTimer += 1;
        if blackAlphaTimer &gt;= blackAlphaTimerMax
        {
            blackAlphaTimer = 0;
            blackAlpha += blackAlphaIncrease;
            if blackAlpha &gt;= 1
                phase = 1;
        }
    break;
    
    case 1: //Fading out
        event_user(0); //Moving the selection
            
        blackAlphaTimer += 1;
        if blackAlphaTimer &gt;= blackAlphaTimerMax
        {
            blackAlphaTimer = 0;
            blackAlpha -= blackAlphaIncrease;
            if blackAlpha &lt;= 0
                phase = 2;
        }
    break;
    
    case 2: //Idle
        event_user(0); //Moving the selection
            
        
        //Select the weapon/tank
        if global.keyJumpPressed || global.keyPausePressed || global.keyShootPressed
        {
            if option != global.totalWeapons+1 &amp;&amp; option != global.totalWeapons+2
            {
                phase = 3;
                global.currentWeapon = option;
                with prtPlayerProjectile instance_destroy();
                with objReflectedProjectile instance_destroy();
                with prtRush instance_destroy();
                with objRushJet instance_destroy(); //Could not be parented to prtRush since it's parented to prtMovingPlatformSolid
                with objMegaman
                {
                    if onRushJet == true
                    {
                        onRushJet = false;
                        canMove = true;
                    }
                }
                
                playSFX(sfxMenuSelect);
            }
            else if option == global.totalWeapons+1
            {
                if global.eTanks &gt; 0 &amp;&amp; global._health &lt; 28
                {
                    option = 99; //Nothing selected
                    phase = 5;
                    global.eTanks -= 1;
                    eTankTimer = 0;
                    sound_loop(sfxEnergyRestore);
                }
                else
                {
                    playSFX(sfxError);
                }
            }
            else if option == global.totalWeapons+2
            {
                if global.mTanks &gt; 0
                {
                    var proceed;
                    proceed = false;
                    for(i = 1; i &lt;= global.totalWeapons; i += 1)
                    {
                        if ceil(global.ammo[i]) &lt; 28
                            proceed = true;
                    }
                    
                    if ceil(global._health) &lt; 28
                        proceed = true;
                        
                    if proceed == true //If proceed is still false after the past calculations, it seems there is nothing to fill
                    {
                        option = 99; //Nothing selected
                        phase = 6;
                        global.mTanks -= 1;
                        eTankTimer = 0;
                        sound_loop(sfxEnergyRestore);
                    }
                    else
                    {
                        playSFX(sfxError);
                    }
                }
                else
                {
                    playSFX(sfxError);
                }
            }
        }
    break;
    
    case 3: //Fading out
        blackAlphaTimer += 1;
        if blackAlphaTimer &gt;= blackAlphaTimerMax
        {
            blackAlphaTimer = 0;
            blackAlpha += blackAlphaIncrease;
            if blackAlpha &gt;= 1
            {
                phase = 4;
                if resetWeapon == true
                {
                    global.weapon = oldWeapon;
                    with objMegaman event_user(0);
                }
            }
        }
    break;
    
    case 4: //Fading in
        blackAlphaTimer += 1;
        if blackAlphaTimer &gt;= blackAlphaTimerMax
        {
            blackAlphaTimer = 0;
            blackAlpha -= blackAlphaIncrease;
            if blackAlpha &lt;= 0
            {
                global.frozen = false;
                instance_destroy();
            }
        }
    break;
    
    case 5: //E-Tank restoring health
        if global._health &lt; 28
        {
            eTankTimer += 1;
            if eTankTimer &gt;= 3
            {
                global._health += 1;
                if global._health &gt; 28
                    global._health = 28;
                eTankTimer = 0;
            }
        }
        else
        {
            eTankTimer = 0;
            phase = 2;
            option = oldWeapon;
            global.weapon = oldWeapon;
            with objMegaman event_user(0);
            sound_stop(sfxEnergyRestore);
        }
    break;
    
    case 6: //M-Tank restoring energy
        eTankTimer += 1; //While it's technically an M-tank, we can use the same timer as the E-tank without any problems, since the two can't fill at the same time
        if eTankTimer &gt;= 3
        {
            eTankTimer = 0;
            
            var proceed;
            proceed = false;
            for(i = 1; i &lt;= global.totalWeapons; i += 1)
            {
                if global.ammo[i] &lt; 28
                {
                    global.ammo[i] += 1;
                    if global.ammo[i] &gt; 28
                        global.ammo[i] = 28;
                        
                    proceed = true;
                }
            }
            
            if global._health &lt; 28
            {
                global._health += 1;
                if global._health &gt; 28
                    global._health = 28;
                    
                proceed = true;
            }
            
            if proceed == false //If proceed is still false after all these calculations, it means everything has been filled
            {
                eTankTimer = 0;
                phase = 2;
                option = oldWeapon;
                global.weapon = oldWeapon;
                with objMegaman event_user(0);
                sound_stop(sfxEnergyRestore);
            }
        }              
    break;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if global.keyDownPressed
{
    playSFX(sfxMenuMove);
    
    var loops;
    loops = 0; //How many times the while-loop has been passed through
    
    while global.weaponUnlocked[option] == false || loops == 0
    {
        //The bottom of the left column and the right column;
        //when the bottom of the left column is selected and we press down, we want to select the E-tank
        //for the right column, we want to select the M-tank
        if option != 5 &amp;&amp; option != global.totalWeapons 
        {
            option += 1;
            if option &lt; 0
                option = global.totalWeapons;
            else if option &gt; global.totalWeapons
                option = 0;
        }
        else if option == 5 //The bottom of the left column
        {
            option = global.totalWeapons+1; //E-tank
        }
        else //The bottom of the right column
        {
            option = global.totalWeapons+2; //M-tank
        }
            
        if option != global.totalWeapons+1 &amp;&amp; option != global.totalWeapons+2
        {
            global.weapon = global.weaponSlot[option];
            with objMegaman event_user(0);
        }
        
        loops += 1;
    }
}
else if global.keyUpPressed
{
    playSFX(sfxMenuMove);
    
    var loops;
    loops = 0;
    
    while global.weaponUnlocked[option] == false || loops == 0
    {
        if option == global.totalWeapons+2 //M-tank
        {
            option = global.totalWeapons; //The bottom weapon of the right column
        }
        else if option == global.totalWeapons+1 //E-tank
        {
            if global.totalWeapons &gt; 5
                option = 5; //The bottom weapon of the left column
            else
                option = global.totalWeapons;
        }
        else if option == 6 //The top weapon of the right column
        {
            option = global.totalWeapons+2; //M-tank
        }
        else if option == 0 //The top weapon of the left column
        {
            option = global.totalWeapons+1; //E-tank
        }
        else
        {
            option -= 1;
            if option &lt; 0
                option = global.totalWeapons+1;
            else if option &gt; global.totalWeapons+1
                option = 0;
        }
            
        if option != global.totalWeapons+1 &amp;&amp; option != global.totalWeapons+2
        {
            global.weapon = global.weaponSlot[option];
            with objMegaman event_user(0);
        }
        
        loops += 1;
    }
}

if global.keyLeftPressed || global.keyRightPressed
{
    if global.totalWeapons &gt; 5 //If there is a right column of weapons
    &amp;&amp; option != global.totalWeapons+1 &amp;&amp; option != global.totalWeapons+2 //When the E-tank or M-tank is not selected
    {
        if option &gt; 5
            option -= 6;
        else
            option += 6;
            
        if option &gt; global.totalWeapons
            option = global.totalWeapons;
        else if option &lt; 0
            option = 0;
            
        playSFX(sfxMenuMove);
    }
    
    //E-Tanks and M-Tanks
    if option == global.totalWeapons+1 || option == global.totalWeapons+2
    {
        if option == global.totalWeapons+1
            option = global.totalWeapons+2;
        else
            option = global.totalWeapons+1;
            
        playSFX(sfxMenuMove);
    }
    
    
    while global.weaponUnlocked[option] == false
    {
        if option == 6
            option = global.totalWeapons;
        else if option == 0
        {
            if global.totalWeapons &gt; 5
                option = 5;
            else
                option = global.totalWeapons;
        }
        else    
            option -= 1;
    }
    
    if option != global.totalWeapons+1 &amp;&amp; option != global.totalWeapons+2
    {
        global.weapon = global.weaponSlot[option];
        with objMegaman event_user(0);
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var oldCol, oldAlp;
oldCol = draw_get_color();
oldAlp = draw_get_alpha();


//Menu
if (phase &gt;= 1 &amp;&amp; phase &lt;= 3) || phase == 5 || phase == 6
{
    draw_set_font(global.font);
    
    //BG
    draw_set_color(c_white);
    draw_set_alpha(1);
    draw_sprite(sprPauseMenuBG, 0, view_xview[0], view_yview[0]);
    
    //Life
    var xx, yy, bgCol, i;
    xx = view_xview[0]+200;
    yy = view_yview[0]+183;
    bgCol = make_color_rgb(5, 5, 5);
    draw_sprite_ext(sprLife, 0, xx, yy, 1, 1, 0, c_white, 1);
    draw_sprite_ext(sprLifePrimary, 0, xx, yy, 1, 1, 0, global.primaryCol, 1);
    draw_sprite_ext(sprLifeSecondary, 0, xx, yy, 1, 1, 0, global.secondaryCol, 1);
    draw_sprite_ext(sprLifeOutline, 0, xx, yy, 1, 1, 0, bgCol, 1);
    draw_text(xx + (41-20), yy + (201-195), "0" + string(global._lives));
    
    //Screws
    if global.enableScrews {
        xx = view_xview[0]+200;
        yy = view_yview[0]+199;
        draw_sprite(sprScrewBig, 0, xx, yy);
        draw_text(xx + (41-24), yy + (201-194), string_replace_all(string_format(global.screws, 3, 0), " ", "0"));
    }
    
    //Megaman
    xx = view_xview[0]+155;
    yy = view_yview[0]+192;
    draw_sprite_ext(sprMegamanStand, 0, xx, yy, 1, 1, 0, c_white, 1);
    draw_sprite_ext(sprMegamanStandPrimary, 0, xx, yy, 1, 1, 0, global.primaryCol, 1);
    draw_sprite_ext(sprMegamanStandSecondary, 0, xx, yy, 1, 1, 0, global.secondaryCol, 1);
    draw_sprite_ext(sprMegamanStandOutline, 0, xx, yy, 1, 1, 0, bgCol, 1);
    
    //Icons, ammo bars and names
    var maxI;
    if global.totalWeapons &gt; 5 //a maximum of 6 weapons in the left column (0 is also a valid weapon ID, hence 5 instead of 6)
        maxI = 5;
    else
        maxI = global.totalWeapons;
        
    //Left column
    for(i = 0; i &lt;= maxI; i += 1)
    {
        if global.weaponUnlocked[i] == true
        {
            //Icon
            if option == i
                draw_sprite_ext(sprWeaponIcons, global.weaponSlot[i], view_xview[0]+32, view_yview[0]+24+i*19, 1, 1, 0, c_white, 1);
            else
                draw_sprite_ext(sprWeaponIconsGray, global.weaponSlot[i], view_xview[0]+32, view_yview[0]+24+i*19, 1, 1, 0, c_white, 1);
                
            //Ammo bar
            var ammo;
            if i == 0
                ammo = global._health;
            else
                ammo = ceil(global.ammo[i]);
                
            if option == i
                draw_sprite_ext(sprPauseMenuBar, ammo, view_xview[0]+32+32, view_yview[0]+24+i*19+8, 1, 1, 0, c_white, 1);
            else
                draw_sprite_ext(sprPauseMenuBarGray, ammo, view_xview[0]+32+32, view_yview[0]+24+i*19+8, 1, 1, 0, c_white, 1);
            
            //The life bar at the bottom left
            if i == 0
                draw_sprite_ext(sprPauseMenuBarGray, global._health, view_xview[0]+128, view_yview[0]+208, 1, 1, 0, c_white, 1);
                
            //Name
            draw_set_font(global.font);
            draw_set_halign(fa_left);
            draw_set_valign(fa_top);
            
            if option == i
            {
                draw_set_color(make_color_rgb(255, 217, 162)); //Light yellow-ish
                draw_text(view_xview[0]+32+16+10, view_yview[0]+24+i*19+1, global.weaponName[ global.weaponSlot[i] ]);
                draw_set_color(c_white);
            }
            else
                draw_text(view_xview[0]+32+16+10, view_yview[0]+24+i*19+1, global.weaponName[ global.weaponSlot[i] ]);
        }
    }
    
    //Right column
    if global.totalWeapons &gt; 5
    {
        for(i = 0; i &lt; global.totalWeapons-5; i += 1)
        {
            if global.weaponUnlocked[i+6] == true
            {
                //Icon
                if option == i+6
                    draw_sprite_ext(sprWeaponIcons, global.weaponSlot[i+6], view_xview[0]+144, view_yview[0]+24+i*19, 1, 1, 0, c_white, 1);
                else
                    draw_sprite_ext(sprWeaponIconsGray, global.weaponSlot[i+6], view_xview[0]+144, view_yview[0]+24+i*19, 1, 1, 0, c_white, 1);
                    
                //Ammo bar
                var ammo;
                ammo = ceil(global.ammo[i+6]);
                    
                if option == i+6
                    draw_sprite_ext(sprPauseMenuBar, ammo, view_xview[0]+144+32, view_yview[0]+24+i*19+8, 1, 1, 0, c_white, 1);
                else
                    draw_sprite_ext(sprPauseMenuBarGray, ammo, view_xview[0]+144+32, view_yview[0]+24+i*19+8, 1, 1, 0, c_white, 1);
                    
                //Name
                draw_set_font(global.font);
                draw_set_halign(fa_left);
                draw_set_valign(fa_top);
                
                if option == i+6
                {
                    draw_set_color(make_color_rgb(255, 217, 162)); //Light yellow-ish
                    draw_text(view_xview[0]+144+16+10, view_yview[0]+24+i*19+1, global.weaponName[ global.weaponSlot[i+6] ]);
                    draw_set_color(c_white);
                }
                else
                    draw_text(view_xview[0]+144+16+10, view_yview[0]+24+i*19+1, global.weaponName[ global.weaponSlot[i+6] ]);
            }
        }
    }
    
    //E-Tank
    if option == global.totalWeapons+1
    {
        draw_sprite_ext(sprETankPrimary, 0, view_xview[0]+24, view_yview[0]+184, 1, 1, 0, make_color_rgb(0, 120, 248), 1);
        draw_sprite_ext(sprETankSecondary, 0, view_xview[0]+24, view_yview[0]+184, 1, 1, 0, make_color_rgb(0, 232, 216), 1);
    }
    
    //M-Tank
    else if option == global.totalWeapons+2
    {
        draw_sprite_ext(sprMTankPrimary, 0, view_xview[0]+80, view_yview[0]+184, 1, 1, 0, make_color_rgb(0, 120, 248), 1);
        draw_sprite_ext(sprMTankSecondary, 0, view_xview[0]+80, view_yview[0]+184, 1, 1, 0, make_color_rgb(0, 232, 216), 1);
    }
    
    draw_text(view_xview[0]+41, view_yview[0]+201, "0" + string(global.eTanks));
    draw_text(view_xview[0]+96, view_yview[0]+201, "0" + string(global.mTanks));
}


//Black rectangle
draw_set_color(c_black);
draw_set_alpha(blackAlpha);
draw_rectangle(view_xview[0], view_yview[0], view_xview[0]+view_wview[0], view_yview[0]+view_hview[0], false);


draw_set_color(oldCol);
draw_set_alpha(oldAlp);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
